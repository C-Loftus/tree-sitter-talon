#!/usr/bin/env bash

# Usage: script/parse-examples [repo_name] [node|wasm]

# Exit immediately if a command exits with a non-zero status.
set -e

# Change directory to project root.
cd "$(dirname "$0")/.."

# Get the repository name
example_slug=$1
example_path="examples/$example_slug"

# Parse examples in 'node' or 'wasm' mode.
mode=${2:-node}

if [ -f "script/known-failures-$example_slug.txt" ]; then
    known_failures=$(cat "script/known-failures-$example_slug.txt")
fi
examples_to_parse=$(
    for example in $(find "$example_path" -name '*.talon'); do
        if [[ ! $known_failures == *$example* ]]; then
            echo $example
        fi
    done
)

if [ "$mode" == "node" ]; then
    # Ensure the scanner was recompiled
    # tree-sitter test -f 'just compile it' >/dev/null
    npm run build-node
    elif [ "$mode" == "wasm" ]; then
    # Ensure tree-sitter-talon.wasm was compiled
    npm run build-wasm
fi

start=$(date '+%s.%N')
if [ "$mode" == "node" ]; then
    echo $examples_to_parse | xargs -n 2000 tree-sitter parse -q
    elif [ "$mode" == "wasm" ]; then
    echo $examples_to_parse | xargs -n 2000 ./scripts/tree-sitter-parse.js
fi
end=$(date '+%s.%N')

skipped=$( echo $known_failures | wc -w )
parsed=$( echo $examples_to_parse | wc -w )
total=$((parsed+skipped))
percent=$(bc -l <<< "100*$parsed/$total")
duration=$(bc -l <<< "$end - $start")

printf "Successfully parsed %.2f%% of '$example_slug' in %.4fs (%d of %d files)\n" $percent $duration $parsed $total
